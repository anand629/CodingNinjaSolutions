
import java.util.*;
public class Solution {

	public static boolean isPermutation(String str1, String str2) {
	//	Your code goes here
		if(str1.length()!=str2.length()){
			return false;
		}
		HashMap<Character,Integer> map= new HashMap<>();
		HashMap<Character, Integer> map1 = new HashMap<>();

		for(int i=0;i<str1.length();i++){
			char c=str1.charAt(i);
			if(map.containsKey(c)){
				map.put(c,map.get(c)+1);
			}else{
				map.put(c,1);
			}
		}

		for (int i = 0; i < str2.length(); i++) {
			char c = str2.charAt(i);
			if (map1.containsKey(c)) {
				map1.put(c, map1.get(c) + 1);
			} else {
				map1.put(c, 1);
			}
		}
		Boolean per=false;

		for(Character c:map.keySet())
		{
			if(!map1.containsKey(c)){
				return false;
			}
			else
			{
				if(map.get(c)==map1.get(c)){
					per=true;
				}else{
					per=false;
					return per;
				}

			}
		}
		return per;


    // if(str1.length()!= str2.length()) return false;
    //     int[] frequency = new int[26];
    //     for(int i=0;i<str1.length();i++){
    //         frequency[str1.charAt(i)-'a']++;
    //         frequency[str2.charAt(i)-'a']--;
            
    //     }
    //     for(int i=0; i<frequency.length;i++){
    //         if(frequency[i]!=0) return false;
    //     }
    //     return true;

	}

}
